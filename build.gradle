buildscript {
    repositories {
        mavenCentral()
        maven {
            url '../local-plugin-repository'
        }
        gradlePluginPortal()
    }

    ext {
        coverageExclusion = [
                '**/feature/Application*',
                '**/feature/dto/**',
                '**/feature/controller/dto/**',
                '**/feature/persistence/entity/**',
                '**/feature/configuration/**',
                '**/feature/configuration/properties/**',
                '**/feature/**/exception/**',
        ]

        // versions
        kotlinVersion = "1.7.22"
        kotlinLoggingVersion = "2.0.11"
        kotlinJacksonVersion = "2.14.1"
        kotlinMockitoVersion = "3.2.0"

        springBootVersion = "2.7.9"
        springCloudVersion = "2021.0.6"
        springManagementVersion = "1.0.15.RELEASE"

        luceneVersion = "9.5.0"
        commonsCodecVersion = "1.15"
        commonsIoVersion = "2.11.0"

        loggerVersion = "1.2.1"
        apacheTextVersion = "1.10.0"
        jgitVersion = "6.6.0.202305301015-r"

        junitVersion = "5.8.1"
        codeQualityVersion = "1.2.1"
        testcontainersPostgresVersion = "2.3.2"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    id "org.jetbrains.kotlin.plugin.noarg" version "$kotlinVersion"
    id "org.jetbrains.kotlin.plugin.allopen" version "$kotlinVersion"
    id "org.jetbrains.kotlin.plugin.jpa" version "$kotlinVersion"
    id "org.jetbrains.kotlin.plugin.spring" version "$kotlinVersion"
    id "org.jetbrains.kotlin.kapt" version "$kotlinVersion"

    id "io.spring.dependency-management" version "$springManagementVersion"
    id "org.springframework.boot" version "$springBootVersion"

    id "com.markklim.popcorn.quality" version "$codeQualityVersion"
}

group "com.markklim.feature"
version "1.0.1"

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

dependencies {
    // spring
    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation "org.springframework.boot:spring-boot-starter-validation"

    implementation "org.springframework.cloud:spring-cloud-starter-bootstrap"
    implementation "org.springframework.cloud:spring-cloud-starter-sleuth"

    // database
    implementation "org.springframework.boot:spring-boot-starter-data-r2dbc"

    // database - h2
    implementation "com.h2database:h2"
    implementation "io.r2dbc:r2dbc-h2"

    // database - postgres
    implementation "org.postgresql:postgresql"
    implementation "org.postgresql:r2dbc-postgresql"

    // flyway
    implementation "org.springframework.boot:spring-boot-starter-jdbc"
    implementation "org.flywaydb:flyway-core"

    // index
    implementation "org.apache.lucene:lucene-core:$luceneVersion"
    implementation "org.apache.lucene:lucene-queryparser:$luceneVersion"

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactive"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactor"
    implementation "io.github.microutils:kotlin-logging-jvm:$kotlinLoggingVersion"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$kotlinJacksonVersion"

    // commons
    implementation "commons-codec:commons-codec:$commonsCodecVersion"
    implementation "commons-io:commons-io:$commonsIoVersion"

    // text
    implementation "org.apache.commons:commons-text:$apacheTextVersion"

    // log
    implementation "com.markklim.libs:ginger-log:$loggerVersion"

    // git
    implementation "org.eclipse.jgit:org.eclipse.jgit:$jgitVersion"

    // test
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.cloud:spring-cloud-contract-wiremock"

    testImplementation "org.mockito.kotlin:mockito-kotlin:$kotlinMockitoVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    testImplementation "com.playtika.testcontainers:embedded-postgresql:$testcontainersPostgresVersion"
}

test {
    useJUnitPlatform()
}
